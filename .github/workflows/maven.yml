# CI/CD pipeline for expense-tracker using GitHub Actions
# Builds the Java project, creates a Docker image, and deploys to Minikube

name: expense-tracker-cicd

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the code
      - name: Check out code
        uses: actions/checkout@v2
        with:
          ref: main

      # Step 2: Set up JDK
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven


      # Step 4: Build the project with Maven
      - name: Build with Maven
        run: mvn clean install

      # Step 5: Build and push Docker image
      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: javatechie/expense-tracker
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          ref: main  # Ensure correct branch

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Set up Minikube (Local)
        run: |
          minikube start --driver=docker
          kubectl config use-context minikube


      - name: Apply Kubernetes Deployment and Service
        run: |
          kubectl apply -f ./k8s-deployment.yaml --validate=false
          kubectl apply -f ./k8s-service.yaml --validate=false

      # Step 6: Expose application (optional)
      - name: Expose application (optional)
        run: |
          minikube service expensetracker-service --url