name: expense-tracker-cicd

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean install

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: javatechie/expense-tracker
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  deploy:
    runs-on: ubuntu-latest
    needs: build  # This ensures deployment only happens after build job succeeds

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up kubectl (to interact with Kubernetes)
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # Step 3: Set up Kubeconfig from secrets (ensure your Kubeconfig is set up in GitHub secrets)
      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube  # Ensure the directory exists
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config  # Write the kubeconfig
          chmod 600 $HOME/.kube/config  # Secure the config file

      # Step 4: Set the Kubernetes context (if needed)
      - name: Set Kubernetes Context
        run: |
          kubectl config use-context docker-desktop  # Set context if required, replace with your context name

      # Step 5: Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s-deployment.yaml --validate=false
          kubectl apply -f k8s-service.yaml --validate=false
